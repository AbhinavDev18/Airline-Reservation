booking.html code is
<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Book Flight - SkyWay Airlines</title>
    <link rel="stylesheet" href="css/styles.css">
    <script src="https://kit.fontawesome.com/a076d05399.js" crossorigin="anonymous"></script>
    <link href="https://fonts.googleapis.com/css2?family=Poppins:wght@300;400;500;600;700&display=swap" rel="stylesheet">
</head>
<body>
    <header>
        <nav>
            <div class="logo">
                <h1>SkyWay</h1>
            </div>
            <ul class="nav-links">
                <li><a href="index.html">Home</a></li>
                <li><a href="dashboard.html" id="dashboard-link">My Trips</a></li>
                <li><a href="contact.html">Contact</a></li>
                <li><a href="login.html" id="login-link" style="display: none;">Login</a></li>
                <li><a href="#" id="logout-link">Logout</a></li>
            </ul>
            <div class="burger">
                <div class="line1"></div>
                <div class="line2"></div>
                <div class="line3"></div>
            </div>
        </nav>
    </header>

    <div class="booking-container">
        <h2>Book Your Flight</h2>
        
        <div class="booking-progress">
            <div class="progress-step active">Flight Details</div>
            <div class="progress-step">Passenger Information</div>
            <div class="progress-step">Payment</div>
            <div class="progress-step">Confirmation</div>
        </div>
        
        <div class="booking-step">
            <h3>Flight Summary</h3>
            <div id="flight-summary" class="flight-summary">
            </div>
        </div>
        
        <div class="booking-step">
            <h3>Passenger Information</h3>
            <form id="passenger-form" class="passenger-form">
            </form>
        </div>
        
        <button id="btn-booking" class="btn-booking">Continue to Payment</button>
    </div>

    <footer>
        <div class="footer-content">
            <div class="footer-section">
                <h3>SkyWay Airlines</h3>
                <p>Making travel dreams come true since 2023</p>
            </div>
            <div class="footer-section">
                <h3>Contact Us</h3>
                <p>Email: info@skyway.com</p>
                <p>Phone: +1 (555) 123-4567</p>
            </div>
            <div class="footer-section">
                <h3>Follow Us</h3>
                <div class="social-links">
                    <a href="#"><i class="fab fa-facebook"></i></a>
                    <a href="#"><i class="fab fa-twitter"></i></a>
                    <a href="#"><i class="fab fa-instagram"></i></a>
                </div>
            </div>
        </div>
        <div class="footer-bottom">
            <p>&copy; 2023 SkyWay Airlines. All rights reserved.</p>
        </div>
    </footer>

    <script src="https://www.gstatic.com/firebasejs/9.6.0/firebase-app-compat.js"></script>
    <script src="https://www.gstatic.com/firebasejs/9.6.0/firebase-auth-compat.js"></script>
    <script src="https://www.gstatic.com/firebasejs/9.6.0/firebase-firestore-compat.js"></script>
    
    <script src="js/firebase-config.js"></script>
    <script src="js/auth.js"></script>
    <script src="js/booking.js"></script>
    <script src="js/app.js"></script>
</body>
</html>

contact.html code is
<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Contact Us - SkyWay Airlines</title>
    <link rel="stylesheet" href="css/styles.css">
    <script src="https://kit.fontawesome.com/a076d05399.js" crossorigin="anonymous"></script>
    <link href="https://fonts.googleapis.com/css2?family=Poppins:wght@300;400;500;600;700&display=swap" rel="stylesheet">
</head>
<body>
    <header>
        <nav>
            <div class="logo">
                <h1>SkyWay</h1>
            </div>
            <ul class="nav-links">
                <li><a href="index.html">Home</a></li>
                <li><a href="dashboard.html" id="dashboard-link" style="display: none;">My Trips</a></li>
                <li><a href="contact.html" class="active">Contact</a></li>
                <li><a href="login.html" id="login-link">Login</a></li>
                <li><a href="#" id="logout-link" style="display: none;">Logout</a></li>
            </ul>
            <div class="burger">
                <div class="line1"></div>
                <div class="line2"></div>
                <div class="line3"></div>
            </div>
        </nav>
    </header>

    <section class="hero" style="height: 30vh;">
        <div class="hero-content">
            <h1>Contact Us</h1>
            <p>We're here to help with any questions you have</p>
        </div>
    </section>

    <div class="contact-container">
        <div id="contact-success" class="alert alert-success" style="display: none;">
            Your message has been sent successfully. We'll get back to you soon!
        </div>
        
        <div class="contact-info">
            <div class="contact-method">
                <i class="fas fa-envelope"></i>
                <h3>Email Us</h3>
                <p>support@skyway.com</p>
            </div>
            <div class="contact-method">
                <i class="fas fa-phone-alt"></i>
                <h3>Call Us</h3>
                <p>+1 (555) 123-4567</p>
            </div>
            <div class="contact-method">
                <i class="fas fa-map-marker-alt"></i>
                <h3>Visit Us</h3>
                <p>123 Airline Road, New York, NY 10001</p>
            </div>
        </div>
        
        <h2>Send Us a Message</h2>
        <form id="contact-form" class="contact-form">
            <div class="form-group">
                <label for="name">Your Name</label>
                <input type="text" id="name" name="name" required>
            </div>
            <div class="form-group">
                <label for="email">Your Email</label>
                <input type="email" id="email" name="email" required>
            </div>
            <div class="form-group">
                <label for="subject">Subject</label>
                <input type="text" id="subject" name="subject" required>
            </div>
            <div class="form-group">
                <label for="message">Message</label>
                <textarea id="message" name="message" rows="5" required></textarea>
            </div>
            <button type="submit" class="btn-contact">Send Message</button>
        </form>
    </div>

    <footer>
        <div class="footer-content">
            <div class="footer-section">
                <h3>SkyWay Airlines</h3>
                <p>Making travel dreams come true since 2023</p>
            </div>
            <div class="footer-section">
                <h3>Contact Us</h3>
                <p>Email: info@skyway.com</p>
                <p>Phone: +1 (555) 123-4567</p>
            </div>
            <div class="footer-section">
                <h3>Follow Us</h3>
                <div class="social-links">
                    <a href="#"><i class="fab fa-facebook"></i></a>
                    <a href="#"><i class="fab fa-twitter"></i></a>
                    <a href="#"><i class="fab fa-instagram"></i></a>
                </div>
            </div>
        </div>
        <div class="footer-bottom">
            <p>&copy; 2023 SkyWay Airlines. All rights reserved.</p>
        </div>
    </footer>

    <!-- Firebase SDK -->
    <script src="https://www.gstatic.com/firebasejs/9.6.0/firebase-app-compat.js"></script>
    <script src="https://www.gstatic.com/firebasejs/9.6.0/firebase-auth-compat.js"></script>
    <script src="https://www.gstatic.com/firebasejs/9.6.0/firebase-firestore-compat.js"></script>
    
    <!-- Application Scripts -->
    <script src="js/firebase-config.js"></script>
    <script src="js/auth.js"></script>
    <script src="js/app.js"></script>
    
    <script>
        document.addEventListener('DOMContentLoaded', function() {
            // Handle contact form submission
            const contactForm = document.getElementById('contact-form');
            const contactSuccess = document.getElementById('contact-success');
            
            if (contactForm) {
                contactForm.addEventListener('submit', function(e) {
                    e.preventDefault();
                    
                    const name = document.getElementById('name').value;
                    const email = document.getElementById('email').value;
                    const subject = document.getElementById('subject').value;
                    const message = document.getElementById('message').value;
                    
                    // Get current user if logged in
                    const user = auth.currentUser;
                    const userId = user ? user.uid : null;
                    
                    // Save message to Firebase
                    db.collection('messages').add({
                        name,
                        email,
                        subject,
                        message,
                        userId,
                        createdAt: firebase.firestore.FieldValue.serverTimestamp()
                    })
                    .then(() => {
                        // Show success message
                        if (contactSuccess) contactSuccess.style.display = 'block';
                        
                        // Clear form
                        contactForm.reset();
                        
                        // Hide success message after 5 seconds
                        setTimeout(() => {
                            if (contactSuccess) contactSuccess.style.display = 'none';
                        }, 5000);
                    })
                    .catch(error => {
                        console.error('Error sending message:', error);
                        alert('Error sending message. Please try again later.');
                    });
                });
            }
            
            // Pre-fill email if user is logged in
            auth.onAuthStateChanged(user => {
                if (user && user.email) {
                    const emailInput = document.getElementById('email');
                    if (emailInput) emailInput.value = user.email;
                    
                    // Pre-fill name if available
                    if (user.displayName) {
                        const nameInput = document.getElementById('name');
                        if (nameInput) nameInput.value = user.displayName;
                    }
                }
            });
        });
    </script>
</body>
</html>

dashboard.html code is 
<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>My Trips - SkyWay Airlines</title>
    <link rel="stylesheet" href="css/styles.css">
    <script src="https://kit.fontawesome.com/a076d05399.js" crossorigin="anonymous"></script>
    <link href="https://fonts.googleapis.com/css2?family=Poppins:wght@300;400;500;600;700&display=swap" rel="stylesheet">
</head>
<body>
    <header>
        <nav>
            <div class="logo">
                <h1>SkyWay</h1>
            </div>
            <ul class="nav-links">
                <li><a href="index.html">Home</a></li>
                <li><a href="dashboard.html" id="dashboard-link" class="active">My Trips</a></li>
                <li><a href="contact.html">Contact</a></li>
                <li><a href="login.html" id="login-link" style="display: none;">Login</a></li>
                <li><a href="#" id="logout-link">Logout</a></li>
            </ul>
            <div class="burger">
                <div class="line1"></div>
                <div class="line2"></div>
                <div class="line3"></div>
            </div>
        </nav>
    </header>

    <div class="dashboard-container">
        <div class="dashboard-header">
            <h2 class="dashboard-title">My Trips</h2>
            <div class="user-welcome">
                <p>Welcome, <span id="user-name">User</span></p>
            </div>
        </div>
        
        <div class="bookings-container">
            <div id="bookings-loader" class="loader"></div>
            <div id="no-bookings" style="display: none;">
                <p>You don't have any bookings yet.</p>
                <a href="index.html" class="btn-primary">Book a Flight</a>
            </div>
            <div id="bookings-list">
            </div>
        </div>
    </div>

    <footer>
        <div class="footer-content">
            <div class="footer-section">
                <h3>SkyWay Airlines</h3>
                <p>Making travel dreams come true since 2023</p>
            </div>
            <div class="footer-section">
                <h3>Contact Us</h3>
                <p>Email: info@skyway.com</p>
                <p>Phone: +1 (555) 123-4567</p>
            </div>
            <div class="footer-section">
                <h3>Follow Us</h3>
                <div class="social-links">
                    <a href="#"><i class="fab fa-facebook"></i></a>
                    <a href="#"><i class="fab fa-twitter"></i></a>
                    <a href="#"><i class="fab fa-instagram"></i></a>
                </div>
            </div>
        </div>
        <div class="footer-bottom">
            <p>&copy; 2023 SkyWay Airlines. All rights reserved.</p>
        </div>
    </footer>

    <script src="https://www.gstatic.com/firebasejs/9.6.0/firebase-app-compat.js"></script>
    <script src="https://www.gstatic.com/firebasejs/9.6.0/firebase-auth-compat.js"></script>
    <script src="https://www.gstatic.com/firebasejs/9.6.0/firebase-firestore-compat.js"></script>
    
    <script src="js/firebase-config.js"></script>
    <script src="js/auth.js"></script>
    <script src="js/app.js"></script>
    
    <script>
        document.addEventListener('DOMContentLoaded', function() {
            requireAuth()
                .then(user => {
                    loadUserBookings(user);
                    
                    const userNameElement = document.getElementById('user-name');
                    if (userNameElement) {
                        userNameElement.textContent = user.displayName || user.email.split('@')[0];
                    }
                })
                .catch(error => {
                    console.error('Auth error:', error);
                });
        });
        
        function loadUserBookings(user) {
            const bookingsList = document.getElementById('bookings-list');
            const noBookings = document.getElementById('no-bookings');
            const bookingsLoader = document.getElementById('bookings-loader');
            
            let recentBooking = null;
            try {
                recentBooking = JSON.parse(localStorage.getItem('recentBooking'));
            } catch (e) {
                console.warn('Could not parse recent booking from localStorage:', e);
            }
            
            if (recentBooking && bookingsLoader) {
                bookingsLoader.style.display = 'none';
            }
            
            if (recentBooking && bookingsList) {
                const bookingId = recentBooking.bookingId;
                const booking = recentBooking.booking;
                
                const departureDate = booking.flightDetails.departure.date;
                const formattedDate = departureDate ? formatDate(departureDate) : 'N/A';
                
                const bookingsHTML = `
                    <div class="booking-card">
                        <div class="booking-header">
                            <h3 class="booking-title">${booking.flightDetails.airline} ${booking.flightDetails.flightNumber}</h3>
                            <span class="booking-status status-${booking.status.toLowerCase()}">${capitalizeFirstLetter(booking.status)}</span>
                        </div>
                        <div class="booking-details">
                            <div class="booking-detail">
                                <span class="detail-label">From</span>
                                <span class="detail-value">${booking.flightDetails.departure.city} (${booking.flightDetails.departure.airport})</span>
                            </div>
                            <div class="booking-detail">
                                <span class="detail-label">To</span>
                                <span class="detail-value">${booking.flightDetails.arrival.city} (${booking.flightDetails.arrival.airport})</span>
                            </div>
                            <div class="booking-detail">
                                <span class="detail-label">Date</span>
                                <span class="detail-value">${formattedDate}</span>
                            </div>
                            <div class="booking-detail">
                                <span class="detail-label">Departure</span>
                                <span class="detail-value">${booking.flightDetails.departure.time}</span>
                            </div>
                            <div class="booking-detail">
                                <span class="detail-label">Arrival</span>
                                <span class="detail-value">${booking.flightDetails.arrival.time}</span>
                            </div>
                            <div class="booking-detail">
                                <span class="detail-label">Class</span>
                                <span class="detail-value">${capitalizeFirstLetter(booking.flightDetails.class)}</span>
                            </div>
                            <div class="booking-detail">
                                <span class="detail-label">Passengers</span>
                                <span class="detail-value">${booking.passengers.length}</span>
                            </div>
                            <div class="booking-detail">
                                <span class="detail-label">Total Price</span>
                                <span class="detail-value">$${booking.payment.amount}</span>
                            </div>
                            <div class="booking-detail">
                                <span class="detail-label">Booking ID</span>
                                <span class="detail-value">${bookingId}</span>
                            </div>
                        </div>
                    </div>
                `;
                
                bookingsList.innerHTML = bookingsHTML;
                return;
            }
            
            try {
                db.collection('bookings')
                    .where('userId', '==', user.uid)
                    .orderBy('createdAt', 'desc')
                    .get()
                    .then(querySnapshot => {
                        if (bookingsLoader) bookingsLoader.style.display = 'none';
                        
                        if (querySnapshot.empty) {
                            if (noBookings) noBookings.style.display = 'block';
                            return;
                        }
                        
                        let bookingsHTML = '';
                        
                        querySnapshot.forEach(doc => {
                            const booking = doc.data();
                            const bookingId = doc.id;
                            
                            const departureDate = booking.flightDetails.departure.date;
                            const formattedDate = departureDate ? formatDate(departureDate) : 'N/A';
                            
                            bookingsHTML += `
                                <div class="booking-card">
                                    <div class="booking-header">
                                        <h3 class="booking-title">${booking.flightDetails.airline} ${booking.flightDetails.flightNumber}</h3>
                                        <span class="booking-status status-${booking.status.toLowerCase()}">${capitalizeFirstLetter(booking.status)}</span>
                                    </div>
                                    <div class="booking-details">
                                        <div class="booking-detail">
                                            <span class="detail-label">From</span>
                                            <span class="detail-value">${booking.flightDetails.departure.city} (${booking.flightDetails.departure.airport})</span>
                                        </div>
                                        <div class="booking-detail">
                                            <span class="detail-label">To</span>
                                            <span class="detail-value">${booking.flightDetails.arrival.city} (${booking.flightDetails.arrival.airport})</span>
                                        </div>
                                        <div class="booking-detail">
                                            <span class="detail-label">Date</span>
                                            <span class="detail-value">${formattedDate}</span>
                                        </div>
                                        <div class="booking-detail">
                                            <span class="detail-label">Departure</span>
                                            <span class="detail-value">${booking.flightDetails.departure.time}</span>
                                        </div>
                                        <div class="booking-detail">
                                            <span class="detail-label">Arrival</span>
                                            <span class="detail-value">${booking.flightDetails.arrival.time}</span>
                                        </div>
                                        <div class="booking-detail">
                                            <span class="detail-label">Class</span>
                                            <span class="detail-value">${capitalizeFirstLetter(booking.flightDetails.class)}</span>
                                        </div>
                                        <div class="booking-detail">
                                            <span class="detail-label">Passengers</span>
                                            <span class="detail-value">${booking.passengers.length}</span>
                                        </div>
                                        <div class="booking-detail">
                                            <span class="detail-label">Total Price</span>
                                            <span class="detail-value">$${booking.payment.amount}</span>
                                        </div>
                                        <div class="booking-detail">
                                            <span class="detail-label">Booking ID</span>
                                            <span class="detail-value">${bookingId}</span>
                                        </div>
                                    </div>
                                </div>
                            `;
                        });
                        
                        if (bookingsList) bookingsList.innerHTML = bookingsHTML;
                    })
                    .catch(error => {
                        console.error('Error loading bookings from Firestore:', error);
                        
                        if (bookingsLoader) bookingsLoader.style.display = 'none';
                        
                        if (!recentBooking) {
                            if (noBookings) {
                                noBookings.style.display = 'block';
                            } else if (bookingsList) {
                                bookingsList.innerHTML = `
                                    <div class="alert alert-info">
                                        <p>Your bookings will appear here after you make a reservation.</p>
                                        <a href="index.html" class="btn-primary" style="display: inline-block; margin-top: 15px;">Book a Flight</a>
                                    </div>
                                `;
                            }
                        }
                    });
            } catch (error) {
                console.error('Error in loadUserBookings:', error);
                
                if (bookingsLoader) bookingsLoader.style.display = 'none';
                
                if (!recentBooking && noBookings) {
                    noBookings.style.display = 'block';
                }
            }
        }
        
        function formatDate(dateString) {
            const options = { weekday: 'long', year: 'numeric', month: 'long', day: 'numeric' };
            return new Date(dateString).toLocaleDateString(undefined, options);
        }
        
        function capitalizeFirstLetter(string) {
            return string.charAt(0).toUpperCase() + string.slice(1);
        }
    </script>
</body>
</html>

index.html code is 
<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>SkyWay Airlines - Book Your Flight</title>
    <link rel="stylesheet" href="css/styles.css">
    <script src="https://kit.fontawesome.com/a076d05399.js" crossorigin="anonymous"></script>
    <link href="https://fonts.googleapis.com/css2?family=Poppins:wght@300;400;500;600;700&display=swap" rel="stylesheet">
</head>
<body>
    <header>
        <nav>
            <div class="logo">
                <h1>SkyWay</h1>
            </div>
            <ul class="nav-links">
                <li><a href="index.html" class="active">Home</a></li>
                <li><a href="dashboard.html" id="dashboard-link" style="display: none;">My Trips</a></li>
                <li><a href="contact.html">Contact</a></li>
                <li><a href="login.html" id="login-link">Login</a></li>
                <li><a href="#" id="logout-link" style="display: none;">Logout</a></li>
            </ul>
            <div class="burger">
                <div class="line1"></div>
                <div class="line2"></div>
                <div class="line3"></div>
            </div>
        </nav>
    </header>

    <section class="hero">
        <div class="hero-content">
            <h1>Explore the World with SkyWay</h1>
            <p>Find the best flights at the best prices</p>
        </div>
    </section>

    <section class="search-container">
        <div class="search-form">
            <h2>Search Flights</h2>
            <form id="flight-search-form">
                <div class="form-group">
                    <label for="from">From</label>
                    <input type="text" id="from" placeholder="City or Airport" required>
                </div>
                <div class="form-group">
                    <label for="to">To</label>
                    <input type="text" id="to" placeholder="City or Airport" required>
                </div>
                <div class="form-row">
                    <div class="form-group">
                        <label for="departure-date">Departure Date</label>
                        <input type="date" id="departure-date" required>
                    </div>
                    <div class="form-group">
                        <label for="return-date">Return Date</label>
                        <input type="date" id="return-date">
                    </div>
                </div>
                <div class="form-row">
                    <div class="form-group">
                        <label for="passengers">Passengers</label>
                        <select id="passengers" required>
                            <option value="1">1</option>
                            <option value="2">2</option>
                            <option value="3">3</option>
                            <option value="4">4</option>
                            <option value="5">5</option>
                        </select>
                    </div>
                    <div class="form-group">
                        <label for="class">Class</label>
                        <select id="class" required>
                            <option value="economy">Economy</option>
                            <option value="business">Business</option>
                            <option value="first">First Class</option>
                        </select>
                    </div>
                </div>
                <button type="submit" class="btn-search">Search Flights</button>
            </form>
        </div>
    </section>

    <section class="search-results">
        <div class="results-container">
            <h2>Flight Results</h2>
            <div id="search-loader" class="loader" style="display: none;"></div>
            <div id="flight-results"></div>
        </div>
    </section>

    <section class="features">
        <div class="feature">
            <i class="fas fa-globe"></i>
            <h3>Global Destinations</h3>
            <p>Fly to over 1000 destinations worldwide</p>
        </div>
        <div class="feature">
            <i class="fas fa-dollar-sign"></i>
            <h3>Best Prices</h3>
            <p>Guaranteed best fares on all flights</p>
        </div>
        <div class="feature">
            <i class="fas fa-headset"></i>
            <h3>24/7 Support</h3>
            <p>Customer service available anytime</p>
        </div>
    </section>

    <footer>
        <div class="footer-content">
            <div class="footer-section">
                <h3>SkyWay Airlines</h3>
                <p>Making travel dreams come true since 2023</p>
            </div>
            <div class="footer-section">
                <h3>Contact Us</h3>
                <p>Email: info@skyway.com</p>
                <p>Phone: +1 (555) 123-4567</p>
            </div>
            <div class="footer-section">
                <h3>Follow Us</h3>
                <div class="social-links">
                    <a href="#"><i class="fab fa-facebook"></i></a>
                    <a href="#"><i class="fab fa-twitter"></i></a>
                    <a href="#"><i class="fab fa-instagram"></i></a>
                </div>
            </div>
        </div>
        <div class="footer-bottom">
            <p>&copy; 2023 SkyWay Airlines. All rights reserved.</p>
        </div>
    </footer>

    <script src="https://www.gstatic.com/firebasejs/9.6.0/firebase-app-compat.js"></script>
    <script src="https://www.gstatic.com/firebasejs/9.6.0/firebase-auth-compat.js"></script>
    <script src="https://www.gstatic.com/firebasejs/9.6.0/firebase-firestore-compat.js"></script>
    
    <script src="js/firebase-config.js"></script>
    <script src="js/auth.js"></script>
    <script src="js/flight-search.js"></script>
    <script src="js/app.js"></script>
</body>
</html>

login.html code is 
<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Login - SkyWay Airlines</title>
    <link rel="stylesheet" href="css/styles.css">
    <script src="https://kit.fontawesome.com/a076d05399.js" crossorigin="anonymous"></script>
    <link href="https://fonts.googleapis.com/css2?family=Poppins:wght@300;400;500;600;700&display=swap" rel="stylesheet">
</head>
<body>
    <header>
        <nav>
            <div class="logo">
                <h1>SkyWay</h1>
            </div>
            <ul class="nav-links">
                <li><a href="index.html">Home</a></li>
                <li><a href="dashboard.html" id="dashboard-link" style="display: none;">My Trips</a></li>
                <li><a href="contact.html">Contact</a></li>
                <li><a href="login.html" id="login-link" class="active">Login</a></li>
                <li><a href="#" id="logout-link" style="display: none;">Logout</a></li>
            </ul>
            <div class="burger">
                <div class="line1"></div>
                <div class="line2"></div>
                <div class="line3"></div>
            </div>
        </nav>
    </header>

    <div class="auth-container">
        <h2>Login</h2>
        <div id="auth-error" class="alert alert-error" style="display: none;"></div>
        
        <form id="login-form" class="auth-form">
            <div class="form-group">
                <label for="email">Email</label>
                <input type="email" id="email" name="email" required>
            </div>
            <div class="form-group">
                <label for="password">Password</label>
                <input type="password" id="password" name="password" required>
            </div>
            <button type="submit" class="btn-auth">Login</button>
        </form>
        
        <div class="auth-divider">
            <span>OR</span>
        </div>
        
        <div class="auth-providers">
            <button id="google-login" class="btn-google">
                <svg xmlns="http://www.w3.org/2000/svg" width="20" height="20" viewBox="0 0 24 24" fill="#4285F4">
                    <path d="M12.24 10.285V14.4h6.806c-.275 1.765-2.056 5.174-6.806 5.174-4.095 0-7.439-3.389-7.439-7.574s3.345-7.574 7.439-7.574c2.33 0 3.891.989 4.785 1.849l3.254-3.138C18.189 1.186 15.479 0 12.24 0c-6.635 0-12 5.365-12 12s5.365 12 12 12c6.926 0 11.52-4.869 11.52-11.726 0-.788-.085-1.39-.189-1.989H12.24z"/>
                </svg>
                Sign in with Google
            </button>
        </div>
        
        <div class="auth-switch">
            <p>Don't have an account? <a href="signup.html">Sign up</a></p>
        </div>
    </div>

    <footer>
        <div class="footer-content">
            <div class="footer-section">
                <h3>SkyWay Airlines</h3>
                <p>Making travel dreams come true since 2023</p>
            </div>
            <div class="footer-section">
                <h3>Contact Us</h3>
                <p>Email: info@skyway.com</p>
                <p>Phone: +1 (555) 123-4567</p>
            </div>
            <div class="footer-section">
                <h3>Follow Us</h3>
                <div class="social-links">
                    <a href="#"><i class="fab fa-facebook"></i></a>
                    <a href="#"><i class="fab fa-twitter"></i></a>
                    <a href="#"><i class="fab fa-instagram"></i></a>
                </div>
            </div>
        </div>
        <div class="footer-bottom">
            <p>&copy; 2023 SkyWay Airlines. All rights reserved.</p>
        </div>
    </footer>

    <!-- Firebase SDK -->
    <script src="https://www.gstatic.com/firebasejs/9.6.0/firebase-app-compat.js"></script>
    <script src="https://www.gstatic.com/firebasejs/9.6.0/firebase-auth-compat.js"></script>
    <script src="https://www.gstatic.com/firebasejs/9.6.0/firebase-firestore-compat.js"></script>
    
    <!-- Application Scripts -->
    <script src="js/firebase-config.js"></script>
    <script src="js/auth.js"></script>
    <script src="js/app.js"></script>
    
    <script>
        document.addEventListener('DOMContentLoaded', function() {
            // Handle login form submission
            const loginForm = document.getElementById('login-form');
            const authError = document.getElementById('auth-error');
            
            if (loginForm) {
                loginForm.addEventListener('submit', function(e) {
                    e.preventDefault();
                    
                    const email = document.getElementById('email').value;
                    const password = document.getElementById('password').value;
                    
                    // Hide any previous error
                    if (authError) authError.style.display = 'none';
                    
                    // Sign in with email and password
                    signIn(email, password)
                        .then(() => {
                            // Redirect to home or previous page
                            const redirectTo = sessionStorage.getItem('redirectAfterLogin') || 'index.html';
                            window.location.href = redirectTo;
                        })
                        .catch(error => {
                            console.error('Login error:', error);
                            
                            // Show error message
                            if (authError) {
                                authError.textContent = error.message;
                                authError.style.display = 'block';
                            }
                        });
                });
            }
            
            // Handle Google login
            const googleLoginBtn = document.getElementById('google-login');
            
            if (googleLoginBtn) {
                googleLoginBtn.addEventListener('click', function() {
                    // Sign in with Google
                    signInWithGoogle()
                        .then(() => {
                            // Redirect to home or previous page
                            const redirectTo = sessionStorage.getItem('redirectAfterLogin') || 'index.html';
                            window.location.href = redirectTo;
                        })
                        .catch(error => {
                            console.error('Google login error:', error);
                            
                            // Show error message
                            if (authError) {
                                authError.textContent = error.message;
                                authError.style.display = 'block';
                            }
                        });
                });
            }
            
            // Check if user is already logged in
            auth.onAuthStateChanged(user => {
                if (user) {
                    // User is already logged in, redirect to home
                    window.location.href = 'index.html';
                }
            });
        });
    </script>
</body>
</html>

payment.html code is 
<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Payment - SkyWay Airlines</title>
    <link rel="stylesheet" href="css/styles.css">
    <script src="https://kit.fontawesome.com/a076d05399.js" crossorigin="anonymous"></script>
    <link href="https://fonts.googleapis.com/css2?family=Poppins:wght@300;400;500;600;700&display=swap" rel="stylesheet">
</head>
<body>
    <header>
        <nav>
            <div class="logo">
                <h1>SkyWay</h1>
            </div>
            <ul class="nav-links">
                <li><a href="index.html">Home</a></li>
                <li><a href="dashboard.html" id="dashboard-link">My Trips</a></li>
                <li><a href="contact.html">Contact</a></li>
                <li><a href="login.html" id="login-link" style="display: none;">Login</a></li>
                <li><a href="#" id="logout-link">Logout</a></li>
            </ul>
            <div class="burger">
                <div class="line1"></div>
                <div class="line2"></div>
                <div class="line3"></div>
            </div>
        </nav>
    </header>

    <div class="payment-container">
        <h2>Payment</h2>
        
        <div class="booking-progress">
            <div class="progress-step completed">Flight Details</div>
            <div class="progress-step completed">Passenger Information</div>
            <div class="progress-step active">Payment</div>
            <div class="progress-step">Confirmation</div>
        </div>
        
        <div id="payment-summary" class="payment-summary">
            <!-- Payment summary will be displayed here -->
        </div>
        
        <div class="payment-details">
            <h3>Payment Method</h3>
            <div class="payment-options">
                <div class="payment-option selected" data-method="card">
                    <svg xmlns="http://www.w3.org/2000/svg" width="50" height="50" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round">
                        <rect x="1" y="4" width="22" height="16" rx="2" ry="2"></rect>
                        <line x1="1" y1="10" x2="23" y2="10"></line>
                    </svg>
                    <span>Credit/Debit Card</span>
                </div>
                <div class="payment-option" data-method="paypal">
                    <svg xmlns="http://www.w3.org/2000/svg" width="50" height="50" viewBox="0 0 24 24" fill="#003087">
                        <path d="M19.5 7.5h-15a1.5 1.5 0 0 0-1.5 1.5v6a1.5 1.5 0 0 0 1.5 1.5h15a1.5 1.5 0 0 0 1.5-1.5V9a1.5 1.5 0 0 0-1.5-1.5zM7.5 13.5h-3V12h3v1.5zm3 0h-2V12h2v1.5z"/>
                    </svg>
                    <span>PayPal</span>
                </div>
                <div class="payment-option" data-method="googlepay">
                    <svg xmlns="http://www.w3.org/2000/svg" width="50" height="50" viewBox="0 0 24 24" fill="#4285F4">
                        <path d="M6.736 13.5H4.5c-0.414 0-0.75-0.336-0.75-0.75v-1.5c0-0.414 0.336-0.75 0.75-0.75h2.236c0.758 0 1.376 0.618 1.376 1.376v0.248c0 0.758-0.618 1.376-1.376 1.376zM16.5 14.25c-1.241 0-2.25-1.009-2.25-2.25s1.009-2.25 2.25-2.25 2.25 1.009 2.25 2.25-1.009 2.25-2.25 2.25zM7.5 14.25c-1.241 0-2.25-1.009-2.25-2.25s1.009-2.25 2.25-2.25 2.25 1.009 2.25 2.25-1.009 2.25-2.25 2.25z"/>
                    </svg>
                    <span>Google Pay</span>
                </div>
            </div>
            
            <div id="card-details" class="card-details">
                <h3>Card Details</h3>
                <form id="card-form" class="card-form">
                    <div class="form-group">
                        <label for="card-number">Card Number</label>
                        <input type="text" id="card-number" name="card-number" placeholder="1234 5678 9012 3456" required>
                    </div>
                    <div class="form-group">
                        <label for="card-name">Cardholder Name</label>
                        <input type="text" id="card-name" name="card-name" placeholder="John Doe" required>
                    </div>
                    <div class="card-row">
                        <div class="form-group">
                            <label for="expiry-date">Expiry Date</label>
                            <input type="text" id="expiry-date" name="expiry-date" placeholder="MM/YY (Any value)">
                        </div>
                        <div class="form-group">
                            <label for="cvv">CVV</label>
                            <input type="text" id="cvv" name="cvv" placeholder="123">
                        </div>
                    </div>
                </form>
            </div>
        </div>
        
        <div id="payment-loader" class="loader" style="display: none;"></div>
        
        <button id="btn-payment" class="btn-payment">Pay Now</button>
    </div>

    <footer>
        <div class="footer-content">
            <div class="footer-section">
                <h3>SkyWay Airlines</h3>
                <p>Making travel dreams come true since 2023</p>
            </div>
            <div class="footer-section">
                <h3>Contact Us</h3>
                <p>Email: info@skyway.com</p>
                <p>Phone: +1 (555) 123-4567</p>
            </div>
            <div class="footer-section">
                <h3>Follow Us</h3>
                <div class="social-links">
                    <a href="#"><i class="fab fa-facebook"></i></a>
                    <a href="#"><i class="fab fa-twitter"></i></a>
                    <a href="#"><i class="fab fa-instagram"></i></a>
                </div>
            </div>
        </div>
        <div class="footer-bottom">
            <p>&copy; 2023 SkyWay Airlines. All rights reserved.</p>
        </div>
    </footer>

    <!-- Firebase SDK -->
    <script src="https://www.gstatic.com/firebasejs/9.6.0/firebase-app-compat.js"></script>
    <script src="https://www.gstatic.com/firebasejs/9.6.0/firebase-auth-compat.js"></script>
    <script src="https://www.gstatic.com/firebasejs/9.6.0/firebase-firestore-compat.js"></script>
    
    <!-- Application Scripts -->
    <script src="js/firebase-config.js"></script>
    <script src="js/auth.js"></script>
    <script src="js/payment.js"></script>
    <script src="js/app.js"></script>
</body>
</html>

signup.html code is 
<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Sign Up - SkyWay Airlines</title>
    <link rel="stylesheet" href="css/styles.css">
    <script src="https://kit.fontawesome.com/a076d05399.js" crossorigin="anonymous"></script>
    <link href="https://fonts.googleapis.com/css2?family=Poppins:wght@300;400;500;600;700&display=swap" rel="stylesheet">
</head>
<body>
    <header>
        <nav>
            <div class="logo">
                <h1>SkyWay</h1>
            </div>
            <ul class="nav-links">
                <li><a href="index.html">Home</a></li>
                <li><a href="dashboard.html" id="dashboard-link" style="display: none;">My Trips</a></li>
                <li><a href="contact.html">Contact</a></li>
                <li><a href="login.html" id="login-link" class="active">Login</a></li>
                <li><a href="#" id="logout-link" style="display: none;">Logout</a></li>
            </ul>
            <div class="burger">
                <div class="line1"></div>
                <div class="line2"></div>
                <div class="line3"></div>
            </div>
        </nav>
    </header>

    <div class="auth-container">
        <h2>Sign Up</h2>
        <div id="auth-error" class="alert alert-error" style="display: none;"></div>
        
        <form id="signup-form" class="auth-form">
            <div class="form-group">
                <label for="name">Full Name</label>
                <input type="text" id="name" name="name" required>
            </div>
            <div class="form-group">
                <label for="email">Email</label>
                <input type="email" id="email" name="email" required>
            </div>
            <div class="form-group">
                <label for="password">Password</label>
                <input type="password" id="password" name="password" required minlength="6">
                <small>Password must be at least 6 characters long</small>
            </div>
            <div class="form-group">
                <label for="confirm-password">Confirm Password</label>
                <input type="password" id="confirm-password" name="confirm-password" required>
            </div>
            <button type="submit" class="btn-auth">Sign Up</button>
        </form>
        
        <div class="auth-divider">
            <span>OR</span>
        </div>
        
        <div class="auth-providers">
            <button id="google-signup" class="btn-google">
                <svg xmlns="http://www.w3.org/2000/svg" width="20" height="20" viewBox="0 0 24 24" fill="#4285F4">
                    <path d="M12.24 10.285V14.4h6.806c-.275 1.765-2.056 5.174-6.806 5.174-4.095 0-7.439-3.389-7.439-7.574s3.345-7.574 7.439-7.574c2.33 0 3.891.989 4.785 1.849l3.254-3.138C18.189 1.186 15.479 0 12.24 0c-6.635 0-12 5.365-12 12s5.365 12 12 12c6.926 0 11.52-4.869 11.52-11.726 0-.788-.085-1.39-.189-1.989H12.24z"/>
                </svg>
                Sign up with Google
            </button>
        </div>
        
        <div class="auth-switch">
            <p>Already have an account? <a href="login.html">Login</a></p>
        </div>
    </div>

    <footer>
        <div class="footer-content">
            <div class="footer-section">
                <h3>SkyWay Airlines</h3>
                <p>Making travel dreams come true since 2023</p>
            </div>
            <div class="footer-section">
                <h3>Contact Us</h3>
                <p>Email: info@skyway.com</p>
                <p>Phone: +1 (555) 123-4567</p>
            </div>
            <div class="footer-section">
                <h3>Follow Us</h3>
                <div class="social-links">
                    <a href="#"><i class="fab fa-facebook"></i></a>
                    <a href="#"><i class="fab fa-twitter"></i></a>
                    <a href="#"><i class="fab fa-instagram"></i></a>
                </div>
            </div>
        </div>
        <div class="footer-bottom">
            <p>&copy; 2023 SkyWay Airlines. All rights reserved.</p>
        </div>
    </footer>

    <!-- Firebase SDK -->
    <script src="https://www.gstatic.com/firebasejs/9.6.0/firebase-app-compat.js"></script>
    <script src="https://www.gstatic.com/firebasejs/9.6.0/firebase-auth-compat.js"></script>
    <script src="https://www.gstatic.com/firebasejs/9.6.0/firebase-firestore-compat.js"></script>
    
    <!-- Application Scripts -->
    <script src="js/firebase-config.js"></script>
    <script src="js/auth.js"></script>
    <script src="js/app.js"></script>
    
    <script>
        document.addEventListener('DOMContentLoaded', function() {
            // Handle signup form submission
            const signupForm = document.getElementById('signup-form');
            const authError = document.getElementById('auth-error');
            
            if (signupForm) {
                signupForm.addEventListener('submit', function(e) {
                    e.preventDefault();
                    
                    const name = document.getElementById('name').value;
                    const email = document.getElementById('email').value;
                    const password = document.getElementById('password').value;
                    const confirmPassword = document.getElementById('confirm-password').value;
                    
                    // Hide any previous error
                    if (authError) authError.style.display = 'none';
                    
                    // Validate passwords match
                    if (password !== confirmPassword) {
                        if (authError) {
                            authError.textContent = 'Passwords do not match';
                            authError.style.display = 'block';
                        }
                        return;
                    }
                    
                    // Sign up with email and password
                    signUp(email, password, name)
                        .then(() => {
                            // Redirect to home or previous page
                            const redirectTo = sessionStorage.getItem('redirectAfterLogin') || 'index.html';
                            window.location.href = redirectTo;
                        })
                        .catch(error => {
                            console.error('Signup error:', error);
                            
                            // Show error message
                            if (authError) {
                                authError.textContent = error.message;
                                authError.style.display = 'block';
                            }
                        });
                });
            }
            
            // Handle Google signup
            const googleSignupBtn = document.getElementById('google-signup');
            
            if (googleSignupBtn) {
                googleSignupBtn.addEventListener('click', function() {
                    // Sign in with Google
                    signInWithGoogle()
                        .then(() => {
                            // Redirect to home or previous page
                            const redirectTo = sessionStorage.getItem('redirectAfterLogin') || 'index.html';
                            window.location.href = redirectTo;
                        })
                        .catch(error => {
                            console.error('Google signup error:', error);
                            
                            // Show error message
                            if (authError) {
                                authError.textContent = error.message;
                                authError.style.display = 'block';
                            }
                        });
                });
            }
            
            // Check if user is already logged in
            auth.onAuthStateChanged(user => {
                if (user) {
                    // User is already logged in, redirect to home
                    window.location.href = 'index.html';
                }
            });
        });
    </script>
</body>
</html>


server.py code is 
import http.server
import socketserver
import os
import re
from urllib.parse import urlparse

PORT = 5000

# Get Firebase configuration from environment variables
firebase_api_key = os.environ.get('FIREBASE_API_KEY', '')
firebase_project_id = os.environ.get('FIREBASE_PROJECT_ID', '')
firebase_app_id = os.environ.get('FIREBASE_APP_ID', '')

class CustomHTTPRequestHandler(http.server.SimpleHTTPRequestHandler):
    def do_GET(self):
        # Parse the path
        parsed_path = urlparse(self.path)
        path = parsed_path.path
        
        # If path is '/' or empty, serve index.html
        if path == '/' or not path:
            path = '/index.html'
            
        # Get the file extension
        _, ext = os.path.splitext(path)
        
        # Process HTML files to inject environment variables
        if ext == '.html':
            try:
                # Open the file
                with open('.' + path, 'r') as f:
                    content = f.read()
                
                # Replace firebase-config.js script tag with inline script
                firebase_config_pattern = r'<script src="js/firebase-config.js"></script>'
                firebase_config_replacement = f'''
                <script>
                // Firebase configuration
                const firebaseConfig = {{
                    apiKey: "{firebase_api_key}",
                    authDomain: "{firebase_project_id}.firebaseapp.com",
                    projectId: "{firebase_project_id}",
                    storageBucket: "{firebase_project_id}.appspot.com",
                    appId: "{firebase_app_id}"
                }};

                // Initialize Firebase
                firebase.initializeApp(firebaseConfig);

                // Initialize Firestore
                const db = firebase.firestore();

                console.log("Firebase initialized");
                </script>
                '''
                content = re.sub(firebase_config_pattern, firebase_config_replacement, content)
                
                # Set the content type
                self.send_response(200)
                self.send_header('Content-type', 'text/html')
                self.end_headers()
                
                # Send the modified content
                self.wfile.write(content.encode())
                return
            except FileNotFoundError:
                # If file not found, use default handler which will return 404
                pass
        
        # For all other files, use the default handler
        return http.server.SimpleHTTPRequestHandler.do_GET(self)

Handler = CustomHTTPRequestHandler

# Allow reuse of the address
socketserver.TCPServer.allow_reuse_address = True

# Try to start the server
try:
    with socketserver.TCPServer(("", PORT), Handler) as httpd:
        print(f"Serving at http://0.0.0.0:{PORT}")
        print(f"Firebase configuration status: API Key: {'Present' if firebase_api_key else 'Missing'}, Project ID: {'Present' if firebase_project_id else 'Missing'}, App ID: {'Present' if firebase_app_id else 'Missing'}")
        httpd.serve_forever()
except OSError as e:
    if e.errno == 98:  # Address already in use
        print(f"Port {PORT} is already in use. This could be due to a previous server instance.")
        print("Try to terminate any running server instances and try again.")
        import sys
        sys.exit(1)
    else:
        raise

styles.css code is 
* {
    box-sizing: border-box;
    margin: 0;
    padding: 0;
    font-family: 'Segoe UI', sans-serif;
}

body {
    background: #f0f2f5;
    color: #333;
}

.navbar {
    background: #1a237e;
    padding: 1rem 2rem;
    display: flex;
    justify-content: space-between;
    align-items: center;
    box-shadow: 0 2px 5px rgba(0,0,0,0.1);
}

.logo {
    color: white;
    font-size: 1.5rem;
    font-weight: bold;
    text-decoration: none;
}

.nav-links {
    display: flex;
    gap: 2rem;
}

.nav-links a {
    color: white;
    text-decoration: none;
    padding: 0.5rem 1rem;
    border-radius: 4px;
    transition: background 0.3s;
}

.nav-links a:hover {
    background: #3949ab;
}

.container {
    max-width: 1200px;
    margin: 2rem auto;
    padding: 0 1rem;
}

.search-form {
    background: white;
    padding: 2rem;
    border-radius: 8px;
    box-shadow: 0 2px 4px rgba(0,0,0,0.1);
    margin-bottom: 2rem;
}

.form-group {
    margin-bottom: 1rem;
}

input, select, button {
    width: 100%;
    padding: 0.8rem;
    margin-top: 0.5rem;
    border: 1px solid #ddd;
    border-radius: 4px;
    font-size: 1rem;
}

button {
    background: #1a237e;
    color: white;
    border: none;
    cursor: pointer;
    transition: background 0.3s;
}

button:hover {
    background: #3949ab;
}

.flight-list {
    display: grid;
    gap: 1rem;
}

.flight-card {
    background: white;
    padding: 1.5rem;
    border-radius: 8px;
    box-shadow: 0 2px 4px rgba(0,0,0,0.1);
    transition: transform 0.2s;
}

.flight-card:hover {
    transform: translateY(-2px);
}

.auth-modal {
    display: none;
    position: fixed;
    top: 50%;
    left: 50%;
    transform: translate(-50%, -50%);
    background: white;
    padding: 2rem;
    border-radius: 8px;
    box-shadow: 0 4px 6px rgba(0,0,0,0.1);
    z-index: 1000;
}

.support-section {
    display: none;
}

textarea {
    height: 150px;
    resize: vertical;
}

css/styles.css code is 
:root {
    --primary-color: #1a73e8;
    --secondary-color: #4285f4;
    --accent-color: #fbbc05;
    --text-color: #333;
    --light-text: #777;
    --white: #fff;
    --light-gray: #f5f5f5;
    --border-color: #ddd;
    --error-color: #ea4335;
    --success-color: #34a853;
}

* {
    margin: 0;
    padding: 0;
    box-sizing: border-box;
}

body {
    font-family: 'Poppins', sans-serif;
    color: var(--text-color);
    line-height: 1.6;
    background-color: var(--light-gray);
}

a {
    text-decoration: none;
    color: var(--primary-color);
}

ul {
    list-style: none;
}

header {
    background-color: var(--white);
    box-shadow: 0 2px 10px rgba(0, 0, 0, 0.1);
    position: sticky;
    top: 0;
    z-index: 1000;
}

nav {
    display: flex;
    justify-content: space-between;
    align-items: center;
    padding: 20px 5%;
    max-width: 1200px;
    margin: 0 auto;
}

.logo h1 {
    color: var(--primary-color);
    font-weight: 700;
    font-size: 24px;
}

.nav-links {
    display: flex;
    justify-content: space-around;
    width: 40%;
}

.nav-links a {
    color: var(--text-color);
    font-weight: 500;
    transition: color 0.3s ease;
}

.nav-links a:hover,
.nav-links a.active {
    color: var(--primary-color);
}

.burger {
    display: none;
    cursor: pointer;
}

.burger div {
    width: 25px;
    height: 3px;
    background-color: var(--text-color);
    margin: 5px;
    transition: all 0.3s ease;
}

.hero {
    background-image: linear-gradient(rgba(0, 0, 0, 0.5), rgba(0, 0, 0, 0.5)), url('https://source.unsplash.com/1600x900/?airplane,sky');
    height: 50vh;
    background-position: center;
    background-repeat: no-repeat;
    background-size: cover;
    display: flex;
    align-items: center;
    justify-content: center;
    text-align: center;
    color: var(--white);
}

.hero-content h1 {
    font-size: 3rem;
    margin-bottom: 1rem;
}

.hero-content p {
    font-size: 1.2rem;
}

.search-container {
    background-color: var(--white);
    padding: 2rem;
    margin-top: -50px;
    margin-bottom: 2rem;
    border-radius: 10px;
    box-shadow: 0 4px 20px rgba(0, 0, 0, 0.1);
    max-width: 800px;
    margin-left: auto;
    margin-right: auto;
}

.search-form h2 {
    margin-bottom: 1.5rem;
    color: var(--primary-color);
    text-align: center;
}

.form-group {
    margin-bottom: 1rem;
}

.form-row {
    display: flex;
    justify-content: space-between;
    gap: 1rem;
}

.form-row .form-group {
    flex: 1;
}

label {
    display: block;
    margin-bottom: 0.5rem;
    font-weight: 500;
}

input, select {
    width: 100%;
    padding: 0.75rem;
    border: 1px solid var(--border-color);
    border-radius: 4px;
    font-family: 'Poppins', sans-serif;
}

input:focus, select:focus {
    outline: none;
    border-color: var(--primary-color);
}

.btn-search {
    background-color: var(--primary-color);
    color: var(--white);
    border: none;
    padding: 1rem 1.5rem;
    border-radius: 4px;
    cursor: pointer;
    font-weight: 600;
    width: 100%;
    margin-top: 1rem;
    transition: background-color 0.3s ease;
}

.btn-search:hover {
    background-color: var(--secondary-color);
}

.search-results {
    max-width: 800px;
    margin: 0 auto 2rem;
    background-color: var(--white);
    border-radius: 10px;
    box-shadow: 0 4px 20px rgba(0, 0, 0, 0.1);
    padding: 2rem;
}

.results-container h2 {
    margin-bottom: 1rem;
    color: var(--primary-color);
}

.flight-card {
    border: 1px solid var(--border-color);
    border-radius: 8px;
    padding: 1.5rem;
    margin-bottom: 1rem;
    display: flex;
    justify-content: space-between;
    align-items: center;
    transition: transform 0.3s ease, box-shadow 0.3s ease;
}

.flight-card:hover {
    transform: translateY(-5px);
    box-shadow: 0 10px 20px rgba(0, 0, 0, 0.1);
}

.flight-info {
    flex: 3;
}

.flight-price {
    flex: 1;
    text-align: right;
}

.flight-info h3 {
    margin-bottom: 0.5rem;
    color: var(--primary-color);
}

.flight-details {
    display: flex;
    justify-content: space-between;
    margin-bottom: 0.5rem;
}

.price {
    font-size: 1.5rem;
    font-weight: 700;
    color: var(--primary-color);
    margin-bottom: 0.5rem;
}

.btn-book {
    background-color: var(--accent-color);
    color: var(--text-color);
    border: none;
    padding: 0.5rem 1rem;
    border-radius: 4px;
    cursor: pointer;
    font-weight: 600;
    transition: background-color 0.3s ease;
}

.btn-book:hover {
    background-color: #e8ad04;
}

.features {
    display: flex;
    justify-content: space-around;
    padding: 4rem 2rem;
    max-width: 1200px;
    margin: 0 auto;
}

.feature {
    text-align: center;
    padding: 2rem;
    background-color: var(--white);
    border-radius: 10px;
    box-shadow: 0 4px 20px rgba(0, 0, 0, 0.1);
    flex: 1;
    margin: 0 1rem;
    transition: transform 0.3s ease;
}

.feature:hover {
    transform: translateY(-10px);
}

.feature i {
    font-size: 3rem;
    color: var(--primary-color);
    margin-bottom: 1rem;
}

.feature h3 {
    margin-bottom: 0.5rem;
    color: var(--primary-color);
}

footer {
    background-color: #1e3a6c;
    color: var(--white);
    padding: 3rem 2rem 1rem;
}

.footer-content {
    display: flex;
    justify-content: space-between;
    flex-wrap: wrap;
    max-width: 1200px;
    margin: 0 auto;
}

.footer-section {
    flex: 1;
    margin-bottom: 2rem;
    min-width: 200px;
    padding: 0 1rem;
}

.footer-section h3 {
    margin-bottom: 1rem;
    position: relative;
    padding-bottom: 0.5rem;
}

.footer-section h3::after {
    content: '';
    position: absolute;
    bottom: 0;
    left: 0;
    width: 50px;
    height: 2px;
    background-color: var(--accent-color);
}

.social-links a {
    display: inline-block;
    margin-right: 1rem;
    color: var(--white);
    font-size: 1.5rem;
    transition: color 0.3s ease;
}

.social-links a:hover {
    color: var(--accent-color);
}

.footer-bottom {
    text-align: center;
    padding-top: 1rem;
    border-top: 1px solid rgba(255, 255, 255, 0.1);
}

.auth-container, .contact-container {
    max-width: 500px;
    margin: 2rem auto;
    background-color: var(--white);
    border-radius: 10px;
    box-shadow: 0 4px 20px rgba(0, 0, 0, 0.1);
    padding: 2rem;
}

.auth-container h2, .contact-container h2 {
    text-align: center;
    margin-bottom: 1.5rem;
    color: var(--primary-color);
}

.auth-form, .contact-form {
    display: flex;
    flex-direction: column;
}

.auth-switch {
    text-align: center;
    margin-top: 1rem;
}

.btn-auth, .btn-contact {
    background-color: var(--primary-color);
    color: var(--white);
    border: none;
    padding: 1rem;
    border-radius: 4px;
    cursor: pointer;
    font-weight: 600;
    transition: background-color 0.3s ease;
}

.btn-auth:hover, .btn-contact:hover {
    background-color: var(--secondary-color);
}

.auth-providers {
    display: flex;
    justify-content: center;
    margin-top: 1rem;
}

.btn-google {
    background-color: #fff;
    color: var(--text-color);
    border: 1px solid var(--border-color);
    padding: 0.75rem 1rem;
    border-radius: 4px;
    cursor: pointer;
    font-weight: 500;
    display: flex;
    align-items: center;
    justify-content: center;
    transition: background-color 0.3s ease;
}

.btn-google:hover {
    background-color: #f5f5f5;
}

.btn-google img {
    width: 20px;
    margin-right: 10px;
}

.dashboard-container {
    max-width: 800px;
    margin: 2rem auto;
    background-color: var(--white);
    border-radius: 10px;
    box-shadow: 0 4px 20px rgba(0, 0, 0, 0.1);
    padding: 2rem;
}

.dashboard-header {
    display: flex;
    justify-content: space-between;
    align-items: center;
    margin-bottom: 2rem;
    padding-bottom: 1rem;
    border-bottom: 1px solid var(--border-color);
}

.dashboard-title {
    color: var(--primary-color);
}

.booking-card {
    border: 1px solid var(--border-color);
    border-radius: 8px;
    padding: 1.5rem;
    margin-bottom: 1rem;
}

.booking-header {
    display: flex;
    justify-content: space-between;
    align-items: center;
    margin-bottom: 1rem;
    padding-bottom: 0.5rem;
    border-bottom: 1px solid var(--border-color);
}

.booking-title {
    color: var(--primary-color);
    font-weight: 600;
}

.booking-status {
    font-weight: 500;
    padding: 0.25rem 0.75rem;
    border-radius: 20px;
    font-size: 0.8rem;
}

.status-confirmed {
    background-color: var(--success-color);
    color: var(--white);
}

.status-pending {
    background-color: var(--accent-color);
    color: var(--text-color);
}

.booking-details {
    display: grid;
    grid-template-columns: repeat(auto-fill, minmax(200px, 1fr));
    gap: 1rem;
}

.booking-detail {
    margin-bottom: 0.5rem;
}

.detail-label {
    font-weight: 500;
    color: var(--light-text);
    font-size: 0.9rem;
}

.detail-value {
    font-weight: 600;
}

.booking-container {
    max-width: 800px;
    margin: 2rem auto;
    background-color: var(--white);
    border-radius: 10px;
    box-shadow: 0 4px 20px rgba(0, 0, 0, 0.1);
    padding: 2rem;
}

.booking-step {
    margin-bottom: 2rem;
}

.booking-step h3 {
    color: var(--primary-color);
    margin-bottom: 1rem;
    padding-bottom: 0.5rem;
    border-bottom: 1px solid var(--border-color);
}

.flight-summary {
    background-color: var(--light-gray);
    border-radius: 8px;
    padding: 1.5rem;
    margin-bottom: 1.5rem;
}

.passenger-form {
    margin-bottom: 1.5rem;
}

.btn-booking {
    background-color: var(--primary-color);
    color: var(--white);
    border: none;
    padding: 1rem 2rem;
    border-radius: 4px;
    cursor: pointer;
    font-weight: 600;
    width: 100%;
    transition: background-color 0.3s ease;
}

.btn-booking:hover {
    background-color: var(--secondary-color);
}

.payment-container {
    max-width: 800px;
    margin: 2rem auto;
    background-color: var(--white);
    border-radius: 10px;
    box-shadow: 0 4px 20px rgba(0, 0, 0, 0.1);
    padding: 2rem;
}

.payment-summary {
    background-color: var(--light-gray);
    border-radius: 8px;
    padding: 1.5rem;
    margin-bottom: 1.5rem;
}

.payment-details {
    margin-bottom: 1.5rem;
}

.payment-options {
    display: flex;
    gap: 1rem;
    margin-bottom: 1.5rem;
}

.payment-option {
    flex: 1;
    border: 1px solid var(--border-color);
    border-radius: 8px;
    padding: 1rem;
    text-align: center;
    cursor: pointer;
    transition: all 0.3s ease;
}

.payment-option.selected {
    border-color: var(--primary-color);
    background-color: rgba(26, 115, 232, 0.05);
}

.payment-option:hover {
    transform: translateY(-5px);
    box-shadow: 0 10px 20px rgba(0, 0, 0, 0.1);
}

.payment-option img {
    max-width: 80px;
    margin-bottom: 0.5rem;
}

.card-form {
    margin-bottom: 1.5rem;
}

.card-row {
    display: flex;
    gap: 1rem;
}

.card-row .form-group {
    flex: 1;
}

.card-form small {
    display: block;
    margin-top: 0.25rem;
    color: var(--light-text);
    font-size: 0.8rem;
}

.btn-payment {
    background-color: var(--primary-color);
    color: var(--white);
    border: none;
    padding: 1rem 2rem;
    border-radius: 4px;
    cursor: pointer;
    font-weight: 600;
    width: 100%;
    transition: background-color 0.3s ease;
}

.btn-payment:hover {
    background-color: var(--secondary-color);
}

.payment-success {
    text-align: center;
    padding: 2rem 1rem;
}

.success-icon {
    margin-bottom: 1.5rem;
    animation: fadeIn 0.5s ease-in, bounce 1s ease-in-out 0.5s;
}

.success-message {
    font-size: 1.2rem;
    color: var(--success-color);
    margin-bottom: 1.5rem;
}

.booking-info {
    background-color: var(--light-gray);
    border-radius: 8px;
    padding: 1.5rem;
    margin: 1.5rem 0;
    text-align: left;
}

.booking-info p {
    margin-bottom: 0.5rem;
}

.success-actions {
    display: flex;
    gap: 1rem;
    justify-content: center;
    margin-top: 2rem;
}

.btn-primary {
    background-color: var(--primary-color);
    color: var(--white);
    padding: 0.75rem 1.5rem;
    border-radius: 4px;
    font-weight: 600;
    transition: background-color 0.3s ease;
}

.btn-primary:hover {
    background-color: var(--secondary-color);
}

.btn-secondary {
    background-color: var(--light-gray);
    color: var(--text-color);
    padding: 0.75rem 1.5rem;
    border-radius: 4px;
    font-weight: 600;
    transition: background-color 0.3s ease;
}

.btn-secondary:hover {
    background-color: var(--border-color);
}

.success-animation {
    animation: successPulse 0.5s ease-out;
}

@keyframes fadeIn {
    from { opacity: 0; }
    to { opacity: 1; }
}

@keyframes bounce {
    0%, 20%, 50%, 80%, 100% { transform: translateY(0); }
    40% { transform: translateY(-20px); }
    60% { transform: translateY(-10px); }
}

@keyframes successPulse {
    0% { transform: scale(0.95); opacity: 0.7; }
    50% { transform: scale(1.02); opacity: 1; }
    100% { transform: scale(1); opacity: 1; }
}

.loader {
    border: 5px solid var(--light-gray);
    border-top: 5px solid var(--primary-color);
    border-radius: 50%;
    width: 50px;
    height: 50px;
    animation: spin 1s linear infinite;
    margin: 2rem auto;
}

@keyframes spin {
    0% { transform: rotate(0deg); }
    100% { transform: rotate(360deg); }
}

.alert {
    padding: 1rem;
    margin-bottom: 1rem;
    border-radius: 4px;
    font-weight: 500;
}

.alert-success {
    background-color: rgba(52, 168, 83, 0.1);
    color: var(--success-color);
    border: 1px solid var(--success-color);
}

.alert-error {
    background-color: rgba(234, 67, 53, 0.1);
    color: var(--error-color);
    border: 1px solid var(--error-color);
}

.alert-info {
    background-color: rgba(66, 133, 244, 0.1);
    color: var(--primary-color);
    border: 1px solid var(--primary-color);
    padding: 1.5rem;
    text-align: center;
    border-radius: 8px;
    margin: 2rem 0;
}

@media screen and (max-width: 768px) {
    body {
        font-size: 14px;
    }

    .nav-links {
        position: absolute;
        right: 0;
        height: 92vh;
        top: 8vh;
        background-color: var(--white);
        display: flex;
        flex-direction: column;
        align-items: center;
        width: 50%;
        transform: translateX(100%);
        transition: transform 0.5s ease-in;
        box-shadow: -2px 0 10px rgba(0, 0, 0, 0.1);
    }

    .nav-links li {
        opacity: 0;
    }

    .burger {
        display: block;
    }

    .nav-active {
        transform: translateX(0%);
    }

    .hero-content h1 {
        font-size: 2rem;
    }

    .hero-content p {
        font-size: 1rem;
    }

    .form-row {
        flex-direction: column;
        gap: 0;
    }

    .search-container {
        margin-top: -25px;
        padding: 1.5rem;
    }

    .features {
        flex-direction: column;
    }

    .feature {
        margin-bottom: 1rem;
    }

    .footer-section {
        flex: 100%;
    }

    .flight-card {
        flex-direction: column;
        align-items: flex-start;
    }

    .flight-price {
        align-self: stretch;
        text-align: left;
        margin-top: 1rem;
    }

    .booking-details {
        grid-template-columns: 1fr;
    }

    .payment-options {
        flex-direction: column;
    }
}

@keyframes navLinkFade {
    from {
        opacity: 0;
        transform: translateX(50px);
    }
    to {
        opacity: 1;
        transform: translateX(0);
    }
}

.toggle .line1 {
    transform: rotate(-45deg) translate(-5px, 6px);
}

.toggle .line2 {
    opacity: 0;
}

.toggle .line3 {
    transform: rotate(45deg) translate(-5px, -6px);
}

js/app.js code is 
const navSlide = () => {
    const burger = document.querySelector('.burger');
    const nav = document.querySelector('.nav-links');
    const navLinks = document.querySelectorAll('.nav-links li');
    
    if (burger) {
        burger.addEventListener('click', () => {
            // Toggle navigation
            nav.classList.toggle('nav-active');
            
            // Animate links
            navLinks.forEach((link, index) => {
                if (link.style.animation) {
                    link.style.animation = '';
                } else {
                    link.style.animation = `navLinkFade 0.5s ease forwards ${index / 7 + 0.3}s`;
                }
            });
            
            // Burger animation
            burger.classList.toggle('toggle');
        });
    }
};

// Initialize application
document.addEventListener('DOMContentLoaded', function() {
    // Initialize mobile navigation
    navSlide();
    
    // Check for redirect after login
    const redirectAfterLogin = sessionStorage.getItem('redirectAfterLogin');
    if (redirectAfterLogin) {
        sessionStorage.removeItem('redirectAfterLogin');
        
        // Check if user is authenticated before redirecting
        auth.onAuthStateChanged(user => {
            if (user) {
                window.location.href = redirectAfterLogin;
            }
        });
    }
});

// Get and format today's date for date inputs
function setMinDates() {
    const today = new Date();
    const year = today.getFullYear();
    let month = today.getMonth() + 1;
    let day = today.getDate();
    
    // Format month and day with leading zeros if needed
    month = month < 10 ? '0' + month : month;
    day = day < 10 ? '0' + day : day;
    
    const formattedDate = `${year}-${month}-${day}`;
    
    // Set min date for departure and return date inputs
    const departureDateInput = document.getElementById('departure-date');
    const returnDateInput = document.getElementById('return-date');
    
    if (departureDateInput) {
        departureDateInput.setAttribute('min', formattedDate);
        departureDateInput.value = formattedDate;
    }
    
    if (returnDateInput) {
        returnDateInput.setAttribute('min', formattedDate);
        
        // Set default return date to tomorrow
        const tomorrow = new Date(today);
        tomorrow.setDate(tomorrow.getDate() + 1);
        
        let tomorrowMonth = tomorrow.getMonth() + 1;
        let tomorrowDay = tomorrow.getDate();
        
        tomorrowMonth = tomorrowMonth < 10 ? '0' + tomorrowMonth : tomorrowMonth;
        tomorrowDay = tomorrowDay < 10 ? '0' + tomorrowDay : tomorrowDay;
        
        const formattedTomorrow = `${tomorrow.getFullYear()}-${tomorrowMonth}-${tomorrowDay}`;
        returnDateInput.value = formattedTomorrow;
    }
}

// Set min dates for date inputs
setMinDates();

// Listen for changes on departure date to update return date min
const departureDateInput = document.getElementById('departure-date');
const returnDateInput = document.getElementById('return-date');

if (departureDateInput && returnDateInput) {
    departureDateInput.addEventListener('change', function() {
        returnDateInput.setAttribute('min', departureDateInput.value);
        
        // If return date is before departure date, update it
        if (returnDateInput.value < departureDateInput.value) {
            returnDateInput.value = departureDateInput.value;
        }
    });
}

// Format card number with spaces
const cardNumberInput = document.getElementById('card-number');
if (cardNumberInput) {
    cardNumberInput.addEventListener('input', function(e) {
        // Remove non-digit characters
        let input = this.value.replace(/\D/g, '');
        
        // Trim to 16 digits
        input = input.substring(0, 16);
        
        // Add spaces every 4 digits
        let formattedInput = '';
        for (let i = 0; i < input.length; i++) {
            if (i > 0 && i % 4 === 0) {
                formattedInput += ' ';
            }
            formattedInput += input[i];
        }
        
        this.value = formattedInput;
    });
}

js/auth.js code is 
// Auth references
const auth = firebase.auth();
const loginLink = document.getElementById('login-link');
const logoutLink = document.getElementById('logout-link');
const dashboardLink = document.getElementById('dashboard-link');

// Check authentication state on page load
auth.onAuthStateChanged(user => {
    if (user) {
        // User is signed in
        console.log('User is signed in:', user.email);
        updateUIForAuthenticatedUser(user);
    } else {
        // User is signed out
        console.log('User is signed out');
        updateUIForUnauthenticatedUser();
    }
});

// Update UI for authenticated user
function updateUIForAuthenticatedUser(user) {
    if (loginLink) loginLink.style.display = 'none';
    if (logoutLink) logoutLink.style.display = 'block';
    if (dashboardLink) dashboardLink.style.display = 'block';

    // Store user data in local storage for easy access
    localStorage.setItem('user', JSON.stringify({
        uid: user.uid,
        email: user.email,
        displayName: user.displayName || user.email.split('@')[0]
    }));
}

// Update UI for unauthenticated user
function updateUIForUnauthenticatedUser() {
    if (loginLink) loginLink.style.display = 'block';
    if (logoutLink) logoutLink.style.display = 'none';
    if (dashboardLink) dashboardLink.style.display = 'none';

    // Clear user data from local storage
    localStorage.removeItem('user');
}

// Sign up with email and password
function signUp(email, password, displayName) {
    return auth.createUserWithEmailAndPassword(email, password)
        .then((userCredential) => {
            // Update the user's profile
            return userCredential.user.updateProfile({
                displayName: displayName
            }).then(() => {
                // Create user document in Firestore
                return db.collection('users').doc(userCredential.user.uid).set({
                    email: email,
                    displayName: displayName,
                    createdAt: firebase.firestore.FieldValue.serverTimestamp()
                });
            }).then(() => {
                console.log('User profile updated and document created');
                return userCredential.user;
            });
        });
}

// Sign in with email and password
function signIn(email, password) {
    return auth.signInWithEmailAndPassword(email, password);
}

// Sign in with Google
function signInWithGoogle() {
    const provider = new firebase.auth.GoogleAuthProvider();
    return auth.signInWithPopup(provider)
        .then((result) => {
            // Check if it's a new user
            const isNewUser = result.additionalUserInfo.isNewUser;
            if (isNewUser) {
                // Create user document in Firestore
                return db.collection('users').doc(result.user.uid).set({
                    email: result.user.email,
                    displayName: result.user.displayName,
                    createdAt: firebase.firestore.FieldValue.serverTimestamp()
                }).then(() => {
                    console.log('New Google user document created');
                    return result.user;
                });
            }
            return result.user;
        });
}

// Sign out
function signOut() {
    return auth.signOut();
}

// Check if a user is logged in and redirect if not
function requireAuth() {
    return new Promise((resolve, reject) => {
        auth.onAuthStateChanged(user => {
            if (user) {
                resolve(user);
            } else {
                window.location.href = 'login.html';
                reject(new Error('Authentication required'));
            }
        });
    });
}

// Set up the logout functionality
if (logoutLink) {
    logoutLink.addEventListener('click', (e) => {
        e.preventDefault();
        signOut()
            .then(() => {
                window.location.href = 'index.html';
            })
            .catch((error) => {
                console.error('Error signing out:', error);
            });
    });
}

js/booking.js code is 
// Booking functionality

// Elements for booking form
const passengerForm = document.getElementById('passenger-form');
const flightSummary = document.getElementById('flight-summary');
const bookingButton = document.getElementById('btn-booking');

// Initialize booking page
document.addEventListener('DOMContentLoaded', function() {
    // Check if user is authenticated
    requireAuth()
        .then(user => {
            // User is authenticated, check for booking details
            const bookingDetails = JSON.parse(sessionStorage.getItem('bookingDetails'));
            
            if (!bookingDetails) {
                // No booking details found, redirect to home
                window.location.href = 'index.html';
                return;
            }
            
            // Display flight summary
            displayFlightSummary(bookingDetails);
            
            // Set up passenger form
            setupPassengerForm(bookingDetails.flightSearch.passengers);
            
            // Set up booking button
            if (bookingButton) {
                bookingButton.addEventListener('click', function(e) {
                    e.preventDefault();
                    processBooking(bookingDetails);
                });
            }
        })
        .catch(error => {
            console.error('Auth error:', error);
        });
});

// Display flight summary
function displayFlightSummary(bookingDetails) {
    if (!flightSummary) return;
    
    const { flightSearch, selectedFlight, price } = bookingDetails;
    
    flightSummary.innerHTML = `
        <h3>Flight Summary</h3>
        <div class="flight-info">
            <div class="flight-detail">
                <span class="detail-label">Flight:</span>
                <span class="detail-value">${selectedFlight.airline} ${selectedFlight.flightNumber}</span>
            </div>
            <div class="flight-detail">
                <span class="detail-label">From:</span>
                <span class="detail-value">${flightSearch.fromCity} (${flightSearch.fromAirport})</span>
            </div>
            <div class="flight-detail">
                <span class="detail-label">To:</span>
                <span class="detail-value">${flightSearch.toCity} (${flightSearch.toAirport})</span>
            </div>
            <div class="flight-detail">
                <span class="detail-label">Date:</span>
                <span class="detail-value">${formatDate(flightSearch.departureDate)}</span>
            </div>
            <div class="flight-detail">
                <span class="detail-label">Departure:</span>
                <span class="detail-value">${selectedFlight.departureTime}</span>
            </div>
            <div class="flight-detail">
                <span class="detail-label">Arrival:</span>
                <span class="detail-value">${selectedFlight.arrivalTime}</span>
            </div>
            <div class="flight-detail">
                <span class="detail-label">Duration:</span>
                <span class="detail-value">${selectedFlight.duration}</span>
            </div>
            <div class="flight-detail">
                <span class="detail-label">Class:</span>
                <span class="detail-value">${capitalizeFirstLetter(flightSearch.travelClass)}</span>
            </div>
            <div class="flight-detail">
                <span class="detail-label">Passengers:</span>
                <span class="detail-value">${flightSearch.passengers}</span>
            </div>
            <div class="flight-detail">
                <span class="detail-label">Price per passenger:</span>
                <span class="detail-value">$${price}</span>
            </div>
            <div class="flight-detail total-price">
                <span class="detail-label">Total Price:</span>
                <span class="detail-value">$${price * flightSearch.passengers}</span>
            </div>
        </div>
    `;
}

// Set up passenger form based on number of passengers
function setupPassengerForm(numPassengers) {
    if (!passengerForm) return;
    
    let formHTML = '';
    
    for (let i = 1; i <= numPassengers; i++) {
        formHTML += `
            <div class="passenger">
                <h4>Passenger ${i}</h4>
                <div class="form-row">
                    <div class="form-group">
                        <label for="passenger${i}-first-name">First Name</label>
                        <input type="text" id="passenger${i}-first-name" name="passenger${i}-first-name" required>
                    </div>
                    <div class="form-group">
                        <label for="passenger${i}-last-name">Last Name</label>
                        <input type="text" id="passenger${i}-last-name" name="passenger${i}-last-name" required>
                    </div>
                </div>
                <div class="form-row">
                    <div class="form-group">
                        <label for="passenger${i}-dob">Date of Birth</label>
                        <input type="date" id="passenger${i}-dob" name="passenger${i}-dob" required>
                    </div>
                    <div class="form-group">
                        <label for="passenger${i}-nationality">Nationality</label>
                        <input type="text" id="passenger${i}-nationality" name="passenger${i}-nationality" required>
                    </div>
                </div>
                <div class="form-row">
                    <div class="form-group">
                        <label for="passenger${i}-passport">Passport Number</label>
                        <input type="text" id="passenger${i}-passport" name="passenger${i}-passport" required>
                    </div>
                    <div class="form-group">
                        <label for="passenger${i}-passport-expiry">Passport Expiry</label>
                        <input type="date" id="passenger${i}-passport-expiry" name="passenger${i}-passport-expiry" required>
                    </div>
                </div>
            </div>
        `;
    }
    
    formHTML += `
        <div class="form-group">
            <label for="contact-email">Contact Email</label>
            <input type="email" id="contact-email" name="contact-email" required>
        </div>
        <div class="form-group">
            <label for="contact-phone">Contact Phone</label>
            <input type="tel" id="contact-phone" name="contact-phone" required>
        </div>
    `;
    
    passengerForm.innerHTML = formHTML;
    
    // Set email to user's email if available
    const user = JSON.parse(localStorage.getItem('user'));
    if (user && user.email) {
        const emailInput = document.getElementById('contact-email');
        if (emailInput) emailInput.value = user.email;
    }
}

// Process booking and redirect to payment
function processBooking(bookingDetails) {
    // Validate form
    if (!validatePassengerForm()) {
        alert('Please fill in all required fields');
        return;
    }
    
    // Get passenger details
    const passengers = [];
    const numPassengers = bookingDetails.flightSearch.passengers;
    
    for (let i = 1; i <= numPassengers; i++) {
        passengers.push({
            firstName: document.getElementById(`passenger${i}-first-name`).value,
            lastName: document.getElementById(`passenger${i}-last-name`).value,
            dateOfBirth: document.getElementById(`passenger${i}-dob`).value,
            nationality: document.getElementById(`passenger${i}-nationality`).value,
            passportNumber: document.getElementById(`passenger${i}-passport`).value,
            passportExpiry: document.getElementById(`passenger${i}-passport-expiry`).value
        });
    }
    
    const contactEmail = document.getElementById('contact-email').value;
    const contactPhone = document.getElementById('contact-phone').value;
    
    // Add passenger details to booking
    const updatedBookingDetails = {
        ...bookingDetails,
        passengers,
        contactEmail,
        contactPhone,
        totalPrice: bookingDetails.price * numPassengers
    };
    
    // Store updated booking details
    sessionStorage.setItem('bookingDetails', JSON.stringify(updatedBookingDetails));
    
    // Redirect to payment page
    window.location.href = 'payment.html';
}

// Validate the passenger form
function validatePassengerForm() {
    const form = document.getElementById('passenger-form');
    
    // Check all required fields
    const requiredFields = form.querySelectorAll('[required]');
    for (const field of requiredFields) {
        if (!field.value.trim()) {
            field.focus();
            return false;
        }
    }
    
    return true;
}

// Format date to display in a readable format
function formatDate(dateString) {
    const options = { weekday: 'long', year: 'numeric', month: 'long', day: 'numeric' };
    return new Date(dateString).toLocaleDateString(undefined, options);
}

// Capitalize first letter of a string
function capitalizeFirstLetter(string) {
    return string.charAt(0).toUpperCase() + string.slice(1);
}

js/firebase-config.js code is 
// firebase-config.js
const firebaseConfig = {
    apiKey: "AIzaSyDcqdppmvWUbwLzlOUVu5lXCAVZuRP1res",
    authDomain: "airlinereservation-c1255.firebaseapp.com",
    projectId: "airlinereservation-c1255",
    storageBucket: "airlinereservation-c1255.appspot.com",
    messagingSenderId: "774467371768",
    appId: "1:774467371768:web:ecb97fbe0bd2b19af8310d"
  };
  
  // Initialize Firebase (for Firebase v8)
  firebase.initializeApp(firebaseConfig);
  
  const db = firebase.firestore();

js/flight-search.js code is 
// Flight search functionality

// API endpoint for flight search
const FLIGHT_API_URL = 'https://airlabs.co/api/v9/schedules';
const API_KEY = 'your-api-key'; // Would replace with actual API key if needed

// Flight search form elements
const flightSearchForm = document.getElementById('flight-search-form');
const searchLoader = document.getElementById('search-loader');
const flightResults = document.getElementById('flight-results');

// Sample airport data for auto-suggestion
const airports = [
    { code: 'JFK', name: 'John F. Kennedy International Airport', city: 'New York', country: 'USA' },
    { code: 'LAX', name: 'Los Angeles International Airport', city: 'Los Angeles', country: 'USA' },
    { code: 'LHR', name: 'Heathrow Airport', city: 'London', country: 'UK' },
    { code: 'CDG', name: 'Charles de Gaulle Airport', city: 'Paris', country: 'France' },
    { code: 'DXB', name: 'Dubai International Airport', city: 'Dubai', country: 'UAE' },
    { code: 'HND', name: 'Haneda Airport', city: 'Tokyo', country: 'Japan' },
    { code: 'SIN', name: 'Changi Airport', city: 'Singapore', country: 'Singapore' },
    { code: 'SYD', name: 'Sydney Airport', city: 'Sydney', country: 'Australia' },
];

// Handle flight search form submission
if (flightSearchForm) {
    flightSearchForm.addEventListener('submit', (e) => {
        e.preventDefault();
        searchFlights();
    });
}

// Search for flights
function searchFlights() {
    // Show loader
    if (searchLoader) searchLoader.style.display = 'block';
    if (flightResults) flightResults.innerHTML = '';

    // Get form values
    const fromCity = document.getElementById('from').value;
    const toCity = document.getElementById('to').value;
    const departureDate = document.getElementById('departure-date').value;
    const returnDate = document.getElementById('return-date').value;
    const passengers = document.getElementById('passengers').value;
    const travelClass = document.getElementById('class').value;

    // Convert city names to airport codes (in a real app, this would be more sophisticated)
    const fromAirport = getAirportCode(fromCity);
    const toAirport = getAirportCode(toCity);

    // Store search details in sessionStorage for booking
    const searchDetails = {
        fromCity,
        toCity,
        fromAirport,
        toAirport,
        departureDate,
        returnDate,
        passengers,
        travelClass
    };
    sessionStorage.setItem('flightSearch', JSON.stringify(searchDetails));

    // Make API request (in a real application)
    // fetchFlights(fromAirport, toAirport, departureDate, returnDate, passengers, travelClass);

    // For demonstration purposes, we'll generate mock flights after a delay
    setTimeout(() => {
        generateMockFlights(searchDetails);
        if (searchLoader) searchLoader.style.display = 'none';
    }, 1500);
}

// Fetch flights from API (in a real application)
function fetchFlights(fromAirport, toAirport, departureDate, returnDate, passengers, travelClass) {
    const params = new URLSearchParams({
        api_key: API_KEY,
        dep_iata: fromAirport,
        arr_iata: toAirport,
        dep_time_min: `${departureDate}T00:00:00`,
        dep_time_max: `${departureDate}T23:59:59`
    });

    fetch(`${FLIGHT_API_URL}?${params}`)
        .then(response => {
            if (!response.ok) {
                throw new Error('Network response was not ok');
            }
            return response.json();
        })
        .then(data => {
            displayFlights(data.response, {
                fromAirport,
                toAirport,
                departureDate,
                returnDate,
                passengers,
                travelClass
            });
            if (searchLoader) searchLoader.style.display = 'none';
        })
        .catch(error => {
            console.error('Error fetching flights:', error);
            if (flightResults) {
                flightResults.innerHTML = `
                    <div class="alert alert-error">
                        Error fetching flights. Please try again later.
                    </div>
                `;
            }
            if (searchLoader) searchLoader.style.display = 'none';
        });
}

// Display flights in the results container
function displayFlights(flights, searchDetails) {
    if (!flightResults) return;

    if (flights.length === 0) {
        flightResults.innerHTML = `
            <div class="alert alert-error">
                No flights found for the selected criteria. Please try different dates or destinations.
            </div>
        `;
        return;
    }

    let resultsHTML = '';
    flights.forEach((flight, index) => {
        const departureTime = new Date(flight.dep_time).toLocaleTimeString([], { hour: '2-digit', minute: '2-digit' });
        const arrivalTime = new Date(flight.arr_time).toLocaleTimeString([], { hour: '2-digit', minute: '2-digit' });
        const duration = calculateDuration(flight.dep_time, flight.arr_time);
        const price = generatePrice(searchDetails.travelClass, flight.distance || 1000);

        resultsHTML += `
            <div class="flight-card" data-flight-id="${flight.flight_iata || index}">
                <div class="flight-info">
                    <h3>${flight.airline_iata || 'SkyWay'} ${flight.flight_number || '123'}</h3>
                    <div class="flight-details">
                        <div>
                            <span>${departureTime}</span>
                            <span>${searchDetails.fromAirport}</span>
                        </div>
                        <div>
                            <span>${duration}</span>
                            <span>Direct</span>
                        </div>
                        <div>
                            <span>${arrivalTime}</span>
                            <span>${searchDetails.toAirport}</span>
                        </div>
                    </div>
                </div>
                <div class="flight-price">
                    <div class="price">$${price}</div>
                    <button class="btn-book" onclick="bookFlight('${flight.flight_iata || index}', ${price})">Book Now</button>
                </div>
            </div>
        `;
    });

    flightResults.innerHTML = resultsHTML;
}

// Generate mock flights for demonstration
function generateMockFlights(searchDetails) {
    if (!flightResults) return;

    const mockFlights = [];
    const airlines = ['SkyWay', 'Delta', 'United', 'American', 'Emirates', 'Lufthansa'];
    const flightNumbers = ['SW123', 'DL456', 'UA789', 'AA234', 'EK567', 'LH890'];
    const departureTimes = ['08:30', '10:45', '12:15', '14:30', '16:45', '19:20'];
    const durations = ['2h 15m', '2h 45m', '3h 10m', '3h 45m', '4h 05m', '4h 30m'];
    const arrivalTimes = ['10:45', '13:30', '15:25', '18:15', '20:50', '23:50'];
    
    // Generate 3-6 mock flights
    const numFlights = Math.floor(Math.random() * 4) + 3;
    
    for (let i = 0; i < numFlights; i++) {
        const airlineIndex = Math.floor(Math.random() * airlines.length);
        const price = generatePrice(searchDetails.travelClass, 
            Math.floor(Math.random() * 2000) + 500);
        
        mockFlights.push({
            id: `flight-${i}`,
            airline: airlines[airlineIndex],
            flightNumber: flightNumbers[airlineIndex],
            departureTime: departureTimes[i % departureTimes.length],
            duration: durations[i % durations.length],
            arrivalTime: arrivalTimes[i % arrivalTimes.length],
            price: price
        });
    }

    let resultsHTML = '';
    mockFlights.forEach((flight) => {
        resultsHTML += `
            <div class="flight-card" data-flight-id="${flight.id}">
                <div class="flight-info">
                    <h3>${flight.airline} ${flight.flightNumber}</h3>
                    <div class="flight-details">
                        <div>
                            <span>${flight.departureTime}</span>
                            <span>${searchDetails.fromAirport}</span>
                        </div>
                        <div>
                            <span>${flight.duration}</span>
                            <span>Direct</span>
                        </div>
                        <div>
                            <span>${flight.arrivalTime}</span>
                            <span>${searchDetails.toAirport}</span>
                        </div>
                    </div>
                </div>
                <div class="flight-price">
                    <div class="price">$${flight.price}</div>
                    <button class="btn-book" onclick="bookFlight('${flight.id}', ${flight.price})">Book Now</button>
                </div>
            </div>
        `;
    });

    flightResults.innerHTML = resultsHTML;
    
    // Store mock flights in session storage for booking
    sessionStorage.setItem('mockFlights', JSON.stringify(mockFlights));
}

// Get airport code from city name
function getAirportCode(cityName) {
    const airport = airports.find(airport => 
        airport.city.toLowerCase() === cityName.toLowerCase() || 
        airport.code.toLowerCase() === cityName.toLowerCase()
    );
    
    return airport ? airport.code : cityName.substring(0, 3).toUpperCase();
}

// Calculate flight duration
function calculateDuration(departureTime, arrivalTime) {
    const depTime = new Date(departureTime);
    const arrTime = new Date(arrivalTime);
    const durationMs = arrTime - depTime;
    const hours = Math.floor(durationMs / (1000 * 60 * 60));
    const minutes = Math.floor((durationMs % (1000 * 60 * 60)) / (1000 * 60));
    
    return `${hours}h ${minutes}m`;
}

// Generate price based on class and distance
function generatePrice(travelClass, distance) {
    let basePrice = distance * 0.1;
    
    switch (travelClass) {
        case 'business':
            basePrice *= 2.5;
            break;
        case 'first':
            basePrice *= 4;
            break;
        default: // economy
            break;
    }
    
    // Add some randomness
    basePrice += Math.floor(Math.random() * 50);
    
    return Math.floor(basePrice);
}

// Book a flight - redirect to booking page or login if not authenticated
function bookFlight(flightId, price) {
    auth.onAuthStateChanged(user => {
        if (user) {
            // User is logged in, proceed to booking
            const flightSearch = JSON.parse(sessionStorage.getItem('flightSearch'));
            const mockFlights = JSON.parse(sessionStorage.getItem('mockFlights'));
            
            const selectedFlight = mockFlights.find(flight => flight.id === flightId);
            
            if (selectedFlight) {
                const bookingDetails = {
                    flightSearch,
                    selectedFlight,
                    price
                };
                
                sessionStorage.setItem('bookingDetails', JSON.stringify(bookingDetails));
                window.location.href = 'booking.html';
            }
        } else {
            // User is not logged in, redirect to login page
            sessionStorage.setItem('redirectAfterLogin', 'index.html');
            alert('Please log in to book a flight');
            window.location.href = 'login.html';
        }
    });
}


js/payment.js code is 
// Payment functionality

// Elements for payment page
const paymentSummary = document.getElementById('payment-summary');
const cardForm = document.getElementById('card-form');
const paymentOptions = document.querySelectorAll('.payment-option');
const cardDetailsSection = document.getElementById('card-details');
const paymentButton = document.getElementById('btn-payment');

// Initialize payment page
document.addEventListener('DOMContentLoaded', function() {
    // Check if user is authenticated
    requireAuth()
        .then(user => {
            // User is authenticated, check for booking details
            const bookingDetails = JSON.parse(sessionStorage.getItem('bookingDetails'));
            
            if (!bookingDetails) {
                // No booking details found, redirect to home
                window.location.href = 'index.html';
                return;
            }
            
            // Display payment summary
            displayPaymentSummary(bookingDetails);
            
            // Set up payment options
            setupPaymentOptions();
            
            // Set up payment button
            if (paymentButton) {
                paymentButton.addEventListener('click', function(e) {
                    e.preventDefault();
                    processPayment(bookingDetails, user);
                });
            }
        })
        .catch(error => {
            console.error('Auth error:', error);
        });
});

// Display payment summary
function displayPaymentSummary(bookingDetails) {
    if (!paymentSummary) return;
    
    const { flightSearch, selectedFlight, passengers, totalPrice } = bookingDetails;
    
    paymentSummary.innerHTML = `
        <h3>Booking Summary</h3>
        <div class="booking-info">
            <div class="booking-detail">
                <span class="detail-label">Flight:</span>
                <span class="detail-value">${selectedFlight.airline} ${selectedFlight.flightNumber}</span>
            </div>
            <div class="booking-detail">
                <span class="detail-label">From:</span>
                <span class="detail-value">${flightSearch.fromCity} (${flightSearch.fromAirport})</span>
            </div>
            <div class="booking-detail">
                <span class="detail-label">To:</span>
                <span class="detail-value">${flightSearch.toCity} (${flightSearch.toAirport})</span>
            </div>
            <div class="booking-detail">
                <span class="detail-label">Date:</span>
                <span class="detail-value">${formatDate(flightSearch.departureDate)}</span>
            </div>
            <div class="booking-detail">
                <span class="detail-label">Class:</span>
                <span class="detail-value">${capitalizeFirstLetter(flightSearch.travelClass)}</span>
            </div>
            <div class="booking-detail">
                <span class="detail-label">Passengers:</span>
                <span class="detail-value">${passengers.length}</span>
            </div>
            <div class="booking-detail total-price">
                <span class="detail-label">Total Price:</span>
                <span class="detail-value">$${totalPrice}</span>
            </div>
        </div>
    `;
}

// Set up payment options
function setupPaymentOptions() {
    if (!paymentOptions.length) return;
    
    // Set credit card as default payment method
    document.querySelector('.payment-option').classList.add('selected');
    
    // Add click event listener to payment options
    paymentOptions.forEach(option => {
        option.addEventListener('click', function() {
            // Remove selected class from all options
            paymentOptions.forEach(opt => opt.classList.remove('selected'));
            
            // Add selected class to clicked option
            this.classList.add('selected');
            
            // Show/hide card details based on selected payment method
            const paymentMethod = this.getAttribute('data-method');
            if (paymentMethod === 'card') {
                cardDetailsSection.style.display = 'block';
            } else {
                cardDetailsSection.style.display = 'none';
            }
        });
    });
}

// Process payment
function processPayment(bookingDetails, user) {
    // Get selected payment method
    const selectedPaymentMethod = document.querySelector('.payment-option.selected');
    if (!selectedPaymentMethod) {
        alert('Please select a payment method');
        return;
    }
    
    const paymentMethod = selectedPaymentMethod.getAttribute('data-method');
    
    // Validate form if credit card is selected
    if (paymentMethod === 'card' && !validateCardForm()) {
        alert('Please fill in all required card details');
        return;
    }
    
    // Show loader
    const paymentLoader = document.getElementById('payment-loader');
    if (paymentLoader) paymentLoader.style.display = 'block';
    if (paymentButton) paymentButton.disabled = true;
    
    // In a real application, we would process the payment with a payment gateway
    // For demonstration, we'll simulate payment processing
    setTimeout(() => {
        // Create booking in Firestore
        createBooking(bookingDetails, user, paymentMethod)
            .then(bookingId => {
                // Hide loader
                if (paymentLoader) paymentLoader.style.display = 'none';
                if (paymentButton) paymentButton.disabled = false;
                
                // Show success message
                showPaymentSuccess(bookingId);
            })
            .catch(error => {
                console.error('Error creating booking:', error);
                
                // Hide loader
                if (paymentLoader) paymentLoader.style.display = 'none';
                if (paymentButton) paymentButton.disabled = false;
                
                // Show error message
                alert('Payment failed. Please try again.');
            });
    }, 2000);
}

// Create booking in Firestore
function createBooking(bookingDetails, user, paymentMethod) {
    const bookingData = {
        userId: user.uid,
        flightDetails: {
            airline: bookingDetails.selectedFlight.airline,
            flightNumber: bookingDetails.selectedFlight.flightNumber,
            departure: {
                airport: bookingDetails.flightSearch.fromAirport,
                city: bookingDetails.flightSearch.fromCity,
                date: bookingDetails.flightSearch.departureDate,
                time: bookingDetails.selectedFlight.departureTime
            },
            arrival: {
                airport: bookingDetails.flightSearch.toAirport,
                city: bookingDetails.flightSearch.toCity,
                time: bookingDetails.selectedFlight.arrivalTime
            },
            duration: bookingDetails.selectedFlight.duration,
            class: bookingDetails.flightSearch.travelClass
        },
        passengers: bookingDetails.passengers,
        contactDetails: {
            email: bookingDetails.contactEmail,
            phone: bookingDetails.contactPhone
        },
        payment: {
            amount: bookingDetails.totalPrice,
            currency: 'USD',
            method: paymentMethod,
            status: 'completed',
            timestamp: firebase.firestore.FieldValue.serverTimestamp()
        },
        status: 'confirmed',
        createdAt: firebase.firestore.FieldValue.serverTimestamp()
    };
    
    // Add booking to Firestore
    return db.collection('bookings').add(bookingData)
        .then(docRef => {
            const bookingId = docRef.id;
            console.log('Booking created with ID:', bookingId);
            
            // Store booking in localStorage for dashboard display
            // This helps with Firebase permission issues
            try {
                localStorage.setItem('recentBooking', JSON.stringify({
                    bookingId: bookingId,
                    booking: bookingData
                }));
            } catch (error) {
                console.warn('Failed to save booking to localStorage:', error);
            }
            
            return bookingId;
        });
}

// Show payment success message
function showPaymentSuccess(bookingId) {
    const paymentContainer = document.querySelector('.payment-container');
    if (!paymentContainer) return;
    
    // Add animation class to container before changing content
    paymentContainer.classList.add('success-animation');
    
    paymentContainer.innerHTML = `
        <div class="payment-success">
            <div class="success-icon">
                <svg xmlns="http://www.w3.org/2000/svg" width="80" height="80" viewBox="0 0 24 24" fill="none" stroke="#34a853" stroke-width="2" stroke-linecap="round" stroke-linejoin="round">
                    <path d="M22 11.08V12a10 10 0 1 1-5.93-9.14"></path>
                    <polyline points="22 4 12 14.01 9 11.01"></polyline>
                </svg>
            </div>
            <h2>Payment Successful!</h2>
            <p class="success-message">Your booking has been confirmed and is ready for your trip!</p>
            <div class="booking-info">
                <p>Booking Reference: <strong>${bookingId}</strong></p>
                <p>A confirmation email has been sent to your email address.</p>
                <p>Save your booking reference for future reference.</p>
            </div>
            <div class="success-actions">
                <a href="dashboard.html" class="btn-primary">View My Bookings</a>
                <a href="index.html" class="btn-secondary">Return to Home</a>
            </div>
        </div>
    `;
    
    // Clear booking details from session storage
    sessionStorage.removeItem('bookingDetails');
    sessionStorage.removeItem('flightSearch');
    sessionStorage.removeItem('mockFlights');
}

// Validate card form
function validateCardForm() {
    if (!cardForm) return true;
    
    // Check all required fields have some value (any value is acceptable)
    const requiredFields = cardForm.querySelectorAll('[required]');
    for (const field of requiredFields) {
        if (!field.value.trim()) {
            field.focus();
            return false;
        }
    }
    
    // Only validate that card number has 16 digits
    const cardNumber = document.getElementById('card-number');
    if (cardNumber) {
        const digitsOnly = cardNumber.value.replace(/\D/g, ''); // Remove all non-digits
        if (digitsOnly.length !== 16) {
            alert('Please enter a 16-digit card number (any numbers are accepted)');
            cardNumber.focus();
            return false;
        }
    }
    
    // No other validations for testing purposes
    return true;
}

// Format date to display in a readable format
function formatDate(dateString) {
    const options = { weekday: 'long', year: 'numeric', month: 'long', day: 'numeric' };
    return new Date(dateString).toLocaleDateString(undefined, options);
}

// Capitalize first letter of a string
function capitalizeFirstLetter(string) {
    return string.charAt(0).toUpperCase() + string.slice(1);
}
